#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 25 11:26:30 2020

@author: nog
"""
import numpy as np
from numpy.linalg import inv

caldata = np.load('calib.npy')


gyr = caldata[:, 0:3]
ac0 = caldata[:, 3:6]
acc = caldata[0:6000:10, 3:6]
k = np.zeros((3, 3))
b = np.zeros((3, 1))
Ti = np.ones((3, 3))
for _i in range(3):
    _a_up = np.mean(acc[acc[:, _i] > 1800, _i])
    _a_down = np.mean(acc[acc[:, _i] < -1800, _i])
    Ti[_i, _i-2] = np.mean(acc[acc[:, _i] > 1800, _i-2])/np.mean(acc[acc[:, _i] > 1800, _i])
    Ti[_i, _i-1] = np.mean(acc[acc[:, _i] > 1800, _i-1])/np.mean(acc[acc[:, _i] > 1800, _i])
    k[_i, _i] = (_a_up - _a_down)/(2*9.81)
    b[_i] = (_a_up + _a_down)/2

kT = inv(k.dot(inv(Ti)))

acc_c = np.zeros(ac0.shape)
G = np.zeros(len(ac0))
g_c = np.zeros(len(ac0))
g = np.zeros(len(ac0))
for _i in range(len(ac0)):
    g[_i] = np.linalg.norm(ac0[_i])
    acc_c[_i, :] = kT.dot((ac0[_i, :]-b.transpose()).transpose()).reshape(3)
    g_c[_i] = np.linalg.norm(acc_c[_i])

a_m = []
G = []
for _i in range(int(len(g_c)/100)):
    a_m.append(np.mean(g_c[_i*100:(_i+1)*100]))
    G.append(((np.mean(g_c[_i*100:(_i+1)*100]))**2+(9.81)**2)**2)


